# 判断相似矩阵中部数值的大小进行转换为邻接矩阵
import pandas as pd
# 读取原始CSV文件，设置header=None表示第一行不是列名
df = pd.read_csv('cosine_distances.csv', header=None)

# 假设整个DataFrame都是数值型，直接对整个DataFrame应用条件
df_binary = df.applymap(lambda x: 0 if isinstance(x, (int, float)) and x < 0.93 else 1)

# 将新的DataFrame写入到新的CSV文件中，因为header=None，所以需要指定列名（如果需要的话）
# 如果你不需要列名，可以保持header=False
df_binary.to_csv('binary_values.csv', index=False, header=False)
# 打印结果以确认（可选）
print(df_binary)




# 将邻接矩阵中对角线上的元素转为0
# 读取CSV文件
df = pd.read_csv('binary_values.csv', header=None)  # 假设没有标题行

# 检查数据形状是否为方阵（即行数和列数相同）
if df.shape[0] != df.shape[1]:
    raise ValueError("CSV文件中的数据不是一个方阵，无法视为邻接矩阵")

# 将对角线上的值设置为0
n = df.shape[0]  # 获取矩阵的大小（行数和列数）
for i in range(n):
    df.iloc[i, i] = 0  # 将对角线上的值设置为0

# 如果需要，将修改后的DataFrame保存回CSV文件
df.to_csv('modified_adjacency_matrix.csv', header=False, index=False)  # 不包含标题和索引

# 显示修改后的数据
print(df)
